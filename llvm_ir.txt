declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)

@constArray = dso_local constant [5 x i32] [i32 1, i32 2, i32 3, i32 4, i32 5]
@a = dso_local constant [2 x [2 x i32]] [[2 x i32] [i32 1, i32 0], [2 x i32] [i32 0, i32 1]]
@b = dso_local constant [2 x [2 x i32]] [[2 x i32] [i32 0, i32 1], [2 x i32] [i32 1, i32 0]]

define dso_local void @multi([2 x i32]* ,[2 x i32]* ,[2 x i32]*) {
	%4 = getelementptr [2 x i32], [2 x i32]* %2, i32 0, i32 0
	%5 = getelementptr i32, i32* %4, i32 0
	%6 = getelementptr [2 x i32], [2 x i32]* %0, i32 0, i32 0
	%7 = getelementptr i32, i32* %6, i32 0
	%8 = load i32, i32* %7
	%9 = getelementptr [2 x i32], [2 x i32]* %1, i32 0, i32 0
	%10 = getelementptr i32, i32* %9, i32 0
	%11 = load i32, i32* %10
	%12 = mul i32 %8, %11
	%13 = getelementptr [2 x i32], [2 x i32]* %0, i32 0, i32 0
	%14 = getelementptr i32, i32* %13, i32 1
	%15 = load i32, i32* %14
	%16 = getelementptr [2 x i32], [2 x i32]* %1, i32 1, i32 0
	%17 = getelementptr i32, i32* %16, i32 0
	%18 = load i32, i32* %17
	%19 = mul i32 %15, %18
	%20 = add i32 %12, %19
	store i32 %20, i32* %5
	%21 = getelementptr [2 x i32], [2 x i32]* %2, i32 0, i32 0
	%22 = getelementptr i32, i32* %21, i32 1
	%23 = getelementptr [2 x i32], [2 x i32]* %0, i32 0, i32 0
	%24 = getelementptr i32, i32* %23, i32 0
	%25 = load i32, i32* %24
	%26 = getelementptr [2 x i32], [2 x i32]* %1, i32 0, i32 0
	%27 = getelementptr i32, i32* %26, i32 1
	%28 = load i32, i32* %27
	%29 = mul i32 %25, %28
	%30 = getelementptr [2 x i32], [2 x i32]* %0, i32 0, i32 0
	%31 = getelementptr i32, i32* %30, i32 1
	%32 = load i32, i32* %31
	%33 = getelementptr [2 x i32], [2 x i32]* %1, i32 1, i32 0
	%34 = getelementptr i32, i32* %33, i32 1
	%35 = load i32, i32* %34
	%36 = mul i32 %32, %35
	%37 = add i32 %29, %36
	store i32 %37, i32* %22
	%38 = getelementptr [2 x i32], [2 x i32]* %2, i32 1, i32 0
	%39 = getelementptr i32, i32* %38, i32 0
	%40 = getelementptr [2 x i32], [2 x i32]* %0, i32 1, i32 0
	%41 = getelementptr i32, i32* %40, i32 0
	%42 = load i32, i32* %41
	%43 = getelementptr [2 x i32], [2 x i32]* %1, i32 0, i32 0
	%44 = getelementptr i32, i32* %43, i32 0
	%45 = load i32, i32* %44
	%46 = mul i32 %42, %45
	%47 = getelementptr [2 x i32], [2 x i32]* %0, i32 1, i32 0
	%48 = getelementptr i32, i32* %47, i32 1
	%49 = load i32, i32* %48
	%50 = getelementptr [2 x i32], [2 x i32]* %1, i32 1, i32 0
	%51 = getelementptr i32, i32* %50, i32 0
	%52 = load i32, i32* %51
	%53 = mul i32 %49, %52
	%54 = add i32 %46, %53
	store i32 %54, i32* %39
	%55 = getelementptr [2 x i32], [2 x i32]* %2, i32 1, i32 0
	%56 = getelementptr i32, i32* %55, i32 1
	%57 = getelementptr [2 x i32], [2 x i32]* %0, i32 1, i32 0
	%58 = getelementptr i32, i32* %57, i32 0
	%59 = load i32, i32* %58
	%60 = getelementptr [2 x i32], [2 x i32]* %1, i32 0, i32 0
	%61 = getelementptr i32, i32* %60, i32 1
	%62 = load i32, i32* %61
	%63 = mul i32 %59, %62
	%64 = getelementptr [2 x i32], [2 x i32]* %0, i32 1, i32 0
	%65 = getelementptr i32, i32* %64, i32 1
	%66 = load i32, i32* %65
	%67 = getelementptr [2 x i32], [2 x i32]* %1, i32 1, i32 0
	%68 = getelementptr i32, i32* %67, i32 1
	%69 = load i32, i32* %68
	%70 = mul i32 %66, %69
	%71 = add i32 %63, %70
	store i32 %71, i32* %56
	ret void
}
define dso_local void @add([2 x i32]* ,[2 x i32]* ,[2 x i32]*) {
	%4 = getelementptr [2 x i32], [2 x i32]* %2, i32 0, i32 0
	%5 = getelementptr i32, i32* %4, i32 0
	%6 = getelementptr [2 x i32], [2 x i32]* %0, i32 0, i32 0
	%7 = getelementptr i32, i32* %6, i32 0
	%8 = load i32, i32* %7
	%9 = getelementptr [2 x i32], [2 x i32]* %1, i32 0, i32 0
	%10 = getelementptr i32, i32* %9, i32 0
	%11 = load i32, i32* %10
	%12 = mul i32 %8, %11
	store i32 %12, i32* %5
	%13 = getelementptr [2 x i32], [2 x i32]* %2, i32 0, i32 0
	%14 = getelementptr i32, i32* %13, i32 1
	%15 = getelementptr [2 x i32], [2 x i32]* %0, i32 0, i32 0
	%16 = getelementptr i32, i32* %15, i32 1
	%17 = load i32, i32* %16
	%18 = getelementptr [2 x i32], [2 x i32]* %1, i32 0, i32 0
	%19 = getelementptr i32, i32* %18, i32 1
	%20 = load i32, i32* %19
	%21 = mul i32 %17, %20
	store i32 %21, i32* %14
	%22 = getelementptr [2 x i32], [2 x i32]* %2, i32 1, i32 0
	%23 = getelementptr i32, i32* %22, i32 0
	%24 = getelementptr [2 x i32], [2 x i32]* %0, i32 1, i32 0
	%25 = getelementptr i32, i32* %24, i32 0
	%26 = load i32, i32* %25
	%27 = getelementptr [2 x i32], [2 x i32]* %1, i32 1, i32 0
	%28 = getelementptr i32, i32* %27, i32 0
	%29 = load i32, i32* %28
	%30 = mul i32 %26, %29
	store i32 %30, i32* %23
	%31 = getelementptr [2 x i32], [2 x i32]* %2, i32 1, i32 0
	%32 = getelementptr i32, i32* %31, i32 1
	%33 = getelementptr [2 x i32], [2 x i32]* %0, i32 1, i32 0
	%34 = getelementptr i32, i32* %33, i32 1
	%35 = load i32, i32* %34
	%36 = getelementptr [2 x i32], [2 x i32]* %1, i32 1, i32 0
	%37 = getelementptr i32, i32* %36, i32 1
	%38 = load i32, i32* %37
	%39 = mul i32 %35, %38
	store i32 %39, i32* %32
	ret void
}
define dso_local void @copyConst([2 x i32]* ,i32) {
	%3 = alloca i32
	store i32 %1, i32* %3
	%4 = load i32, i32* %3
	%5 = icmp eq i32 %4, 0
	%6 = zext i1 %5 to i32
	%7 = icmp ne i32 %6, 0
	br i1 %7, label %8, label %29

; <label>:8:
	%9 = getelementptr [2 x i32], [2 x i32]* %0, i32 0, i32 0
	%10 = getelementptr i32, i32* %9, i32 0
	%11 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @a, i32 0, i32 0
	%12 = getelementptr [2 x i32], [2 x i32]* %11, i32 0, i32 0
	%13 = load i32, i32* %12
	store i32 %13, i32* %10
	%14 = getelementptr [2 x i32], [2 x i32]* %0, i32 0, i32 0
	%15 = getelementptr i32, i32* %14, i32 1
	%16 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @a, i32 0, i32 0
	%17 = getelementptr [2 x i32], [2 x i32]* %16, i32 0, i32 1
	%18 = load i32, i32* %17
	store i32 %18, i32* %15
	%19 = getelementptr [2 x i32], [2 x i32]* %0, i32 1, i32 0
	%20 = getelementptr i32, i32* %19, i32 0
	%21 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @a, i32 0, i32 1
	%22 = getelementptr [2 x i32], [2 x i32]* %21, i32 0, i32 0
	%23 = load i32, i32* %22
	store i32 %23, i32* %20
	%24 = getelementptr [2 x i32], [2 x i32]* %0, i32 1, i32 0
	%25 = getelementptr i32, i32* %24, i32 1
	%26 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @a, i32 0, i32 1
	%27 = getelementptr [2 x i32], [2 x i32]* %26, i32 0, i32 1
	%28 = load i32, i32* %27
	store i32 %28, i32* %25
	br label %50

; <label>:29:
	%30 = getelementptr [2 x i32], [2 x i32]* %0, i32 0, i32 0
	%31 = getelementptr i32, i32* %30, i32 0
	%32 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @b, i32 0, i32 0
	%33 = getelementptr [2 x i32], [2 x i32]* %32, i32 0, i32 0
	%34 = load i32, i32* %33
	store i32 %34, i32* %31
	%35 = getelementptr [2 x i32], [2 x i32]* %0, i32 0, i32 0
	%36 = getelementptr i32, i32* %35, i32 1
	%37 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @b, i32 0, i32 0
	%38 = getelementptr [2 x i32], [2 x i32]* %37, i32 0, i32 1
	%39 = load i32, i32* %38
	store i32 %39, i32* %36
	%40 = getelementptr [2 x i32], [2 x i32]* %0, i32 1, i32 0
	%41 = getelementptr i32, i32* %40, i32 0
	%42 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @b, i32 0, i32 1
	%43 = getelementptr [2 x i32], [2 x i32]* %42, i32 0, i32 0
	%44 = load i32, i32* %43
	store i32 %44, i32* %41
	%45 = getelementptr [2 x i32], [2 x i32]* %0, i32 1, i32 0
	%46 = getelementptr i32, i32* %45, i32 1
	%47 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @b, i32 0, i32 1
	%48 = getelementptr [2 x i32], [2 x i32]* %47, i32 0, i32 1
	%49 = load i32, i32* %48
	store i32 %49, i32* %46
	br label %50

; <label>:50:
	ret void
}
define dso_local void @copy([2 x i32]* ,[2 x i32]*) {
	%3 = getelementptr [2 x i32], [2 x i32]* %0, i32 0, i32 0
	%4 = getelementptr i32, i32* %3, i32 0
	%5 = getelementptr [2 x i32], [2 x i32]* %1, i32 0, i32 0
	%6 = getelementptr i32, i32* %5, i32 0
	%7 = load i32, i32* %6
	store i32 %7, i32* %4
	%8 = getelementptr [2 x i32], [2 x i32]* %0, i32 0, i32 0
	%9 = getelementptr i32, i32* %8, i32 1
	%10 = getelementptr [2 x i32], [2 x i32]* %1, i32 0, i32 0
	%11 = getelementptr i32, i32* %10, i32 1
	%12 = load i32, i32* %11
	store i32 %12, i32* %9
	%13 = getelementptr [2 x i32], [2 x i32]* %0, i32 1, i32 0
	%14 = getelementptr i32, i32* %13, i32 0
	%15 = getelementptr [2 x i32], [2 x i32]* %1, i32 1, i32 0
	%16 = getelementptr i32, i32* %15, i32 0
	%17 = load i32, i32* %16
	store i32 %17, i32* %14
	%18 = getelementptr [2 x i32], [2 x i32]* %0, i32 1, i32 0
	%19 = getelementptr i32, i32* %18, i32 1
	%20 = getelementptr [2 x i32], [2 x i32]* %1, i32 1, i32 0
	%21 = getelementptr i32, i32* %20, i32 1
	%22 = load i32, i32* %21
	store i32 %22, i32* %19
	ret void
}
define dso_local void @getMat([2 x i32]*) {
	%2 = getelementptr [2 x i32], [2 x i32]* %0, i32 0, i32 0
	%3 = getelementptr i32, i32* %2, i32 0
	%4 = call i32 @getint()
	store i32 %4, i32* %3
	%5 = getelementptr [2 x i32], [2 x i32]* %0, i32 0, i32 0
	%6 = getelementptr i32, i32* %5, i32 1
	%7 = call i32 @getint()
	store i32 %7, i32* %6
	%8 = getelementptr [2 x i32], [2 x i32]* %0, i32 1, i32 0
	%9 = getelementptr i32, i32* %8, i32 0
	%10 = call i32 @getint()
	store i32 %10, i32* %9
	%11 = getelementptr [2 x i32], [2 x i32]* %0, i32 1, i32 0
	%12 = getelementptr i32, i32* %11, i32 1
	%13 = call i32 @getint()
	store i32 %13, i32* %12
	ret void
}

define dso_local i32 @main() {
	call void @putch(i32 49)
	call void @putch(i32 57)
	call void @putch(i32 50)
	call void @putch(i32 51)
	call void @putch(i32 49)
	call void @putch(i32 49)
	call void @putch(i32 49)
	call void @putch(i32 49)
	call void @putch(i32 10)
	%1 = alloca [2 x [2 x i32]]
	%2 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %1, i32 0, i32 0, i32 0
	store i32 1, i32* %2
	%3 = getelementptr i32, i32* %2, i32 1
	store i32 2, i32* %3
	%4 = getelementptr i32, i32* %2, i32 2
	store i32 3, i32* %4
	%5 = getelementptr i32, i32* %2, i32 3
	store i32 4, i32* %5
	%6 = getelementptr [5 x i32], [5 x i32]* @constArray, i32 0, i32 1
	%7 = load i32, i32* %6
	%8 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @a, i32 0, i32 0
	%9 = getelementptr [2 x i32], [2 x i32]* %8, i32 0, i32 0
	%10 = load i32, i32* %9
	%11 = add i32 %10, 1
	%12 = alloca [2 x [2 x i32]]
	%13 = alloca [2 x [2 x i32]]
	%14 = mul i32 5, 0
	%15 = add i32 1, %14
	%16 = sdiv i32 9, 9
	%17 = sub i32 %15, %16
	%18 = sdiv i32 56, 8
	%19 = add i32 %17, %18
	%20 = alloca [7 x i32]
	%21 = getelementptr [7 x i32], [7 x i32]* %20, i32 0, i32 6
	store i32 5, i32* %21
	%22 = getelementptr [7 x i32], [7 x i32]* %20, i32 0, i32 6
	%23 = load i32, i32* %22
	call void @putint(i32 %23)
	call void @putch(i32 10)
	%24 = sdiv i32 2222, 1111
	%25 = alloca [2 x i32]
	%26 = getelementptr [2 x i32], [2 x i32]* %25, i32 0, i32 0
	store i32 1, i32* %26
	%27 = getelementptr i32, i32* %26, i32 1
	store i32 2, i32* %27
	%28 = alloca i32
	store i32 0, i32* %28
	br label %29
	
; <label>:29:
	%30 = load i32, i32* %28
	%31 = icmp slt i32 %30, 2
	%32 = zext i1 %31 to i32
	%33 = icmp ne i32 %32, 0
	br i1 %33, label %34, label %49
	
; <label>:34:
	%35 = load i32, i32* %28
	%36 = getelementptr [2 x i32], [2 x i32]* %25, i32 0, i32 %35
	%37 = load i32, i32* %36
	%38 = load i32, i32* %28
	%39 = getelementptr [5 x i32], [5 x i32]* @constArray, i32 0, i32 %38
	%40 = load i32, i32* %39
	%41 = icmp eq i32 %37, %40
	%42 = zext i1 %41 to i32
	%43 = icmp ne i32 %42, 0
	br i1 %43, label %44, label %45

; <label>:44:
	call void @putch(i32 116)
	call void @putch(i32 114)
	call void @putch(i32 117)
	call void @putch(i32 101)
	call void @putch(i32 10)
	br label %45

; <label>:45:
	%46 = load i32, i32* %28
	%47 = add i32 %46, 1
	store i32 %47, i32* %28
	br label %48
	
; <label>:48:
	br label %29
	
; <label>:49:
	%50 = getelementptr [5 x i32], [5 x i32]* @constArray, i32 0, i32 0
	%51 = load i32, i32* %50
	%52 = getelementptr [2 x i32], [2 x i32]* %25, i32 0, i32 %51
	%53 = load i32, i32* %52
	call void @putint(i32 %53)
	call void @putch(i32 10)
	%54 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %1, i32 0, i32 0
	%55 = getelementptr [2 x i32], [2 x i32]* %54, i32 0, i32 1
	store i32 123, i32* %55
	%56 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %1, i32 0, i32 0
	%57 = getelementptr [2 x i32], [2 x i32]* %56, i32 0, i32 1
	%58 = load i32, i32* %57
	call void @putint(i32 %58)
	call void @putch(i32 10)
	%59 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %1, i32 0, i32 0
	%60 = getelementptr [2 x i32], [2 x i32]* %59, i32 0, i32 0
	%61 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %1, i32 0, i32 0
	%62 = getelementptr [2 x i32], [2 x i32]* %61, i32 0, i32 1
	%63 = load i32, i32* %62
	store i32 %63, i32* %60
	%64 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %1, i32 0, i32 0
	%65 = getelementptr [2 x i32], [2 x i32]* %64, i32 0, i32 0
	%66 = load i32, i32* %65
	call void @putint(i32 %66)
	call void @putch(i32 10)
	ret i32 0
}
