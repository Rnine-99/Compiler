declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)

@A_GLOBAL = dso_local constant i32 1
@B_GLOBAL = dso_local constant i32 2
@C_GLOBAL = dso_local constant i32 3
@D_GLOBAL = dso_local constant i32 4
@E_GLOBAL = dso_local constant i32 5
@F_GLOBAL = dso_local constant i32 6
@Arr1_1_GLOBAL = dso_local constant [5 x i32] [i32 1, i32 2, i32 3, i32 4, i32 5]
@Arr2_1_GLOBAL = dso_local constant [3 x [2 x i32]] [[2 x i32] [i32 1, i32 2], [2 x i32] [i32 3, i32 4], [2 x i32] [i32 5, i32 6]]
@a_glogal = dso_local global i32 0
@arr1_1_global = dso_local global [5 x i32] [i32 1, i32 2, i32 3, i32 4, i32 5]
@arr2_1_global = dso_local global [3 x [2 x i32]] [[2 x i32] [i32 1, i32 2], [2 x i32] [i32 3, i32 4], [2 x i32] [i32 5, i32 6]]

define dso_local i32 @func_params(i32 ,i32* ,[2 x i32]*) {
	%4 = alloca i32
	store i32 %0, i32* %4
	%5 = alloca i32
	%6 = load i32, i32* %4
	%7 = mul i32 %6, 2
	%8 = getelementptr i32, i32* %1, i32 0
	%9 = load i32, i32* %8
	%10 = srem i32 %9, 2
	%11 = add i32 %7, %10
	%12 = getelementptr [2 x i32], [2 x i32]* %2, i32 0, i32 0
	%13 = getelementptr i32, i32* %12, i32 0
	%14 = load i32, i32* %13
	%15 = srem i32 %14, 3
	%16 = add i32 %11, %15
	store i32 %16, i32* %5
	%17 = load i32, i32* %5
	%18 = load i32, i32* %4
	%19 = add i32 %18, 2
	%20 = mul i32 %17, %19
	store i32 %20, i32* @a_glogal
	%21 = load i32, i32* @a_glogal
	%22 = icmp slt i32 %21, 50
	br i1 %22, label %23, label %25

; <label>:23:
	%24 = load i32, i32* @a_glogal
	call void @putch(i32 78)
	call void @putch(i32 111)
	call void @putch(i32 119)
	call void @putch(i32 32)
	call void @putch(i32 97)
	call void @putch(i32 95)
	call void @putch(i32 103)
	call void @putch(i32 108)
	call void @putch(i32 111)
	call void @putch(i32 98)
	call void @putch(i32 97)
	call void @putch(i32 108)
	call void @putch(i32 32)
	call void @putch(i32 105)
	call void @putch(i32 115)
	call void @putch(i32 32)
	call void @putint(i32 %24)
	call void @putch(i32 44)
	call void @putch(i32 32)
	call void @putch(i32 105)
	call void @putch(i32 116)
	call void @putch(i32 32)
	call void @putch(i32 105)
	call void @putch(i32 115)
	call void @putch(i32 32)
	call void @putch(i32 60)
	call void @putch(i32 32)
	call void @putch(i32 53)
	call void @putch(i32 48)
	call void @putch(i32 46)
	call void @putch(i32 10)
	br label %32

; <label>:25:
	%26 = load i32, i32* @a_glogal
	%27 = icmp eq i32 %26, 50
	br i1 %27, label %28, label %29

; <label>:28:
	call void @putch(i32 78)
	call void @putch(i32 111)
	call void @putch(i32 119)
	call void @putch(i32 32)
	call void @putch(i32 97)
	call void @putch(i32 95)
	call void @putch(i32 103)
	call void @putch(i32 108)
	call void @putch(i32 111)
	call void @putch(i32 98)
	call void @putch(i32 97)
	call void @putch(i32 108)
	call void @putch(i32 32)
	call void @putch(i32 105)
	call void @putch(i32 115)
	call void @putch(i32 32)
	call void @putch(i32 101)
	call void @putch(i32 120)
	call void @putch(i32 97)
	call void @putch(i32 99)
	call void @putch(i32 116)
	call void @putch(i32 108)
	call void @putch(i32 121)
	call void @putch(i32 32)
	call void @putch(i32 53)
	call void @putch(i32 48)
	call void @putch(i32 33)
	call void @putch(i32 33)
	call void @putch(i32 33)
	call void @putch(i32 46)
	call void @putch(i32 10)
	br label %31

; <label>:29:
	%30 = load i32, i32* @a_glogal
	call void @putch(i32 78)
	call void @putch(i32 111)
	call void @putch(i32 119)
	call void @putch(i32 32)
	call void @putch(i32 97)
	call void @putch(i32 95)
	call void @putch(i32 103)
	call void @putch(i32 108)
	call void @putch(i32 111)
	call void @putch(i32 98)
	call void @putch(i32 97)
	call void @putch(i32 108)
	call void @putch(i32 32)
	call void @putch(i32 105)
	call void @putch(i32 115)
	call void @putch(i32 32)
	call void @putint(i32 %30)
	call void @putch(i32 44)
	call void @putch(i32 32)
	call void @putch(i32 105)
	call void @putch(i32 116)
	call void @putch(i32 32)
	call void @putch(i32 105)
	call void @putch(i32 115)
	call void @putch(i32 32)
	call void @putch(i32 62)
	call void @putch(i32 32)
	call void @putch(i32 53)
	call void @putch(i32 48)
	call void @putch(i32 46)
	call void @putch(i32 10)
	br label %31

; <label>:31:
	br label %32

; <label>:32:
	ret i32 0
}
define dso_local i32 @func2_params(i32 ,i32 ,i32) {
	%4 = alloca i32
	store i32 %0, i32* %4
	%5 = alloca i32
	store i32 %1, i32* %5
	%6 = alloca i32
	store i32 %2, i32* %6
	%7 = alloca i32
	%8 = load i32, i32* %4
	%9 = load i32, i32* %5
	%10 = add i32 %8, %9
	%11 = load i32, i32* %6
	%12 = add i32 %10, %11
	%13 = mul i32 6, %12
	%14 = sdiv i32 %13, 2
	%15 = sub i32 %14, 2
	store i32 %15, i32* %7
	%16 = load i32, i32* %4
	%17 = load i32, i32* %5
	%18 = load i32, i32* %6
	%19 = load i32, i32* %7
	call void @putch(i32 73)
	call void @putch(i32 32)
	call void @putch(i32 97)
	call void @putch(i32 109)
	call void @putch(i32 32)
	call void @putch(i32 97)
	call void @putch(i32 32)
	call void @putch(i32 102)
	call void @putch(i32 117)
	call void @putch(i32 110)
	call void @putch(i32 99)
	call void @putch(i32 116)
	call void @putch(i32 105)
	call void @putch(i32 111)
	call void @putch(i32 110)
	call void @putch(i32 32)
	call void @putch(i32 119)
	call void @putch(i32 105)
	call void @putch(i32 116)
	call void @putch(i32 104)
	call void @putch(i32 32)
	call void @putch(i32 51)
	call void @putch(i32 32)
	call void @putch(i32 112)
	call void @putch(i32 97)
	call void @putch(i32 114)
	call void @putch(i32 97)
	call void @putch(i32 109)
	call void @putch(i32 58)
	call void @putch(i32 32)
	call void @putch(i32 123)
	call void @putch(i32 123)
	call void @putch(i32 32)
	call void @putint(i32 %16)
	call void @putch(i32 44)
	call void @putch(i32 32)
	call void @putint(i32 %17)
	call void @putch(i32 44)
	call void @putch(i32 32)
	call void @putint(i32 %18)
	call void @putch(i32 32)
	call void @putch(i32 125)
	call void @putch(i32 125)
	call void @putch(i32 32)
	call void @putch(i32 97)
	call void @putch(i32 110)
	call void @putch(i32 100)
	call void @putch(i32 32)
	call void @putch(i32 73)
	call void @putch(i32 32)
	call void @putch(i32 114)
	call void @putch(i32 101)
	call void @putch(i32 116)
	call void @putch(i32 117)
	call void @putch(i32 114)
	call void @putch(i32 110)
	call void @putch(i32 32)
	call void @putint(i32 %19)
	call void @putch(i32 46)
	call void @putch(i32 10)
	%20 = load i32, i32* %7
	ret i32 %20
}
define dso_local void @func3_params(i32) {
	%2 = alloca i32
	store i32 %0, i32* %2
	%3 = load i32, i32* %2
	call void @putch(i32 73)
	call void @putch(i32 32)
	call void @putch(i32 97)
	call void @putch(i32 109)
	call void @putch(i32 32)
	call void @putch(i32 97)
	call void @putch(i32 32)
	call void @putch(i32 102)
	call void @putch(i32 117)
	call void @putch(i32 110)
	call void @putch(i32 99)
	call void @putch(i32 116)
	call void @putch(i32 105)
	call void @putch(i32 111)
	call void @putch(i32 110)
	call void @putch(i32 32)
	call void @putch(i32 119)
	call void @putch(i32 105)
	call void @putch(i32 116)
	call void @putch(i32 104)
	call void @putch(i32 32)
	call void @putch(i32 111)
	call void @putch(i32 110)
	call void @putch(i32 108)
	call void @putch(i32 121)
	call void @putch(i32 32)
	call void @putch(i32 111)
	call void @putch(i32 110)
	call void @putch(i32 101)
	call void @putch(i32 32)
	call void @putch(i32 112)
	call void @putch(i32 97)
	call void @putch(i32 114)
	call void @putch(i32 97)
	call void @putch(i32 109)
	call void @putch(i32 58)
	call void @putch(i32 32)
	call void @putch(i32 123)
	call void @putch(i32 123)
	call void @putch(i32 32)
	call void @putint(i32 %3)
	call void @putch(i32 32)
	call void @putch(i32 125)
	call void @putch(i32 125)
	call void @putch(i32 32)
	call void @putch(i32 97)
	call void @putch(i32 110)
	call void @putch(i32 100)
	call void @putch(i32 32)
	call void @putch(i32 73)
	call void @putch(i32 32)
	call void @putch(i32 114)
	call void @putch(i32 101)
	call void @putch(i32 116)
	call void @putch(i32 117)
	call void @putch(i32 114)
	call void @putch(i32 110)
	call void @putch(i32 32)
	call void @putch(i32 110)
	call void @putch(i32 111)
	call void @putch(i32 116)
	call void @putch(i32 105)
	call void @putch(i32 110)
	call void @putch(i32 103)
	call void @putch(i32 46)
	call void @putch(i32 10)
	ret void
}
define dso_local void @func4_params(i32 ,i32) {
	%3 = alloca i32
	store i32 %0, i32* %3
	%4 = alloca i32
	store i32 %1, i32* %4
	%5 = load i32, i32* %3
	%6 = load i32, i32* %4
	call void @putch(i32 73)
	call void @putch(i32 32)
	call void @putch(i32 97)
	call void @putch(i32 109)
	call void @putch(i32 32)
	call void @putch(i32 97)
	call void @putch(i32 32)
	call void @putch(i32 102)
	call void @putch(i32 117)
	call void @putch(i32 110)
	call void @putch(i32 99)
	call void @putch(i32 116)
	call void @putch(i32 105)
	call void @putch(i32 111)
	call void @putch(i32 110)
	call void @putch(i32 32)
	call void @putch(i32 119)
	call void @putch(i32 105)
	call void @putch(i32 116)
	call void @putch(i32 104)
	call void @putch(i32 32)
	call void @putch(i32 50)
	call void @putch(i32 32)
	call void @putch(i32 112)
	call void @putch(i32 97)
	call void @putch(i32 114)
	call void @putch(i32 97)
	call void @putch(i32 109)
	call void @putch(i32 58)
	call void @putch(i32 32)
	call void @putch(i32 123)
	call void @putch(i32 123)
	call void @putch(i32 32)
	call void @putint(i32 %5)
	call void @putch(i32 44)
	call void @putch(i32 32)
	call void @putint(i32 %6)
	call void @putch(i32 32)
	call void @putch(i32 125)
	call void @putch(i32 125)
	call void @putch(i32 32)
	call void @putch(i32 97)
	call void @putch(i32 110)
	call void @putch(i32 100)
	call void @putch(i32 32)
	call void @putch(i32 73)
	call void @putch(i32 32)
	call void @putch(i32 114)
	call void @putch(i32 101)
	call void @putch(i32 116)
	call void @putch(i32 117)
	call void @putch(i32 114)
	call void @putch(i32 110)
	call void @putch(i32 32)
	call void @putch(i32 110)
	call void @putch(i32 111)
	call void @putch(i32 116)
	call void @putch(i32 105)
	call void @putch(i32 110)
	call void @putch(i32 103)
	call void @putch(i32 46)
	call void @putch(i32 10)
	ret void
}
define dso_local i32 @func_no_params() {
	call void @putch(i32 73)
	call void @putch(i32 32)
	call void @putch(i32 97)
	call void @putch(i32 109)
	call void @putch(i32 32)
	call void @putch(i32 97)
	call void @putch(i32 32)
	call void @putch(i32 102)
	call void @putch(i32 117)
	call void @putch(i32 110)
	call void @putch(i32 99)
	call void @putch(i32 116)
	call void @putch(i32 105)
	call void @putch(i32 111)
	call void @putch(i32 110)
	call void @putch(i32 32)
	call void @putch(i32 119)
	call void @putch(i32 105)
	call void @putch(i32 116)
	call void @putch(i32 104)
	call void @putch(i32 111)
	call void @putch(i32 117)
	call void @putch(i32 116)
	call void @putch(i32 32)
	call void @putch(i32 112)
	call void @putch(i32 97)
	call void @putch(i32 114)
	call void @putch(i32 97)
	call void @putch(i32 109)
	call void @putch(i32 115)
	call void @putch(i32 32)
	call void @putch(i32 97)
	call void @putch(i32 110)
	call void @putch(i32 100)
	call void @putch(i32 32)
	call void @putch(i32 73)
	call void @putch(i32 32)
	call void @putch(i32 114)
	call void @putch(i32 101)
	call void @putch(i32 116)
	call void @putch(i32 117)
	call void @putch(i32 114)
	call void @putch(i32 110)
	call void @putch(i32 32)
	call void @putch(i32 48)
	call void @putch(i32 46)
	call void @putch(i32 10)
	ret i32 0
}
define dso_local void @func2_no_params() {
	ret void
}

define dso_local i32 @main() {
	%1 = alloca i32
	%2 = alloca i32
	%3 = alloca i32
	%4 = call i32 @getint()
	store i32 %4, i32* %1
	%5 = call i32 @getint()
	store i32 %5, i32* %2
	call void @putch(i32 49)
	call void @putch(i32 57)
	call void @putch(i32 50)
	call void @putch(i32 52)
	call void @putch(i32 49)
	call void @putch(i32 48)
	call void @putch(i32 57)
	call void @putch(i32 49)
	call void @putch(i32 10)
	%6 = load i32, i32* @A_GLOBAL
	call void @putch(i32 65)
	call void @putch(i32 95)
	call void @putch(i32 71)
	call void @putch(i32 76)
	call void @putch(i32 79)
	call void @putch(i32 66)
	call void @putch(i32 65)
	call void @putch(i32 76)
	call void @putch(i32 32)
	call void @putch(i32 61)
	call void @putch(i32 32)
	call void @putint(i32 %6)
	call void @putch(i32 10)
	%7 = load i32, i32* @C_GLOBAL
	call void @func3_params(i32 %7)
	%8 = load i32, i32* @A_GLOBAL
	%9 = load i32, i32* @B_GLOBAL
	call void @func4_params(i32 %8, i32 %9)
	%10 = call i32 @func_no_params()
	call void @func2_no_params()
	%11 = getelementptr [5 x i32], [5 x i32]* @arr1_1_global, i32 0, i32 1
	store i32 2, i32* %11
	%12 = getelementptr [5 x i32], [5 x i32]* @arr1_1_global, i32 0, i32 4
	%13 = load i32, i32* @C_GLOBAL
	store i32 %13, i32* %12
	%14 = getelementptr [5 x i32], [5 x i32]* @arr1_1_global, i32 0, i32 2
	%15 = getelementptr [5 x i32], [5 x i32]* @Arr1_1_GLOBAL, i32 0, i32 3
	%16 = load i32, i32* %15
	store i32 %16, i32* %14
	%17 = getelementptr [3 x [2 x i32]], [3 x [2 x i32]]* @arr2_1_global, i32 0, i32 1
	%18 = getelementptr [2 x i32], [2 x i32]* %17, i32 0, i32 1
	%19 = getelementptr [3 x [2 x i32]], [3 x [2 x i32]]* @Arr2_1_GLOBAL, i32 0, i32 1
	%20 = getelementptr [2 x i32], [2 x i32]* %19, i32 0, i32 1
	%21 = load i32, i32* %20
	store i32 %21, i32* %18
	%22 = getelementptr [3 x [2 x i32]], [3 x [2 x i32]]* @arr2_1_global, i32 0, i32 1
	%23 = getelementptr [2 x i32], [2 x i32]* %22, i32 0, i32 1
	%24 = getelementptr [5 x i32], [5 x i32]* @arr1_1_global, i32 0, i32 1
	%25 = load i32, i32* %24
	%26 = mul i32 %25, 2
	store i32 %26, i32* %23
	%27 = getelementptr [3 x [2 x i32]], [3 x [2 x i32]]* @arr2_1_global, i32 0, i32 1
	%28 = getelementptr [2 x i32], [2 x i32]* %27, i32 0, i32 1
	%29 = load i32, i32* %28
	call void @putch(i32 97)
	call void @putch(i32 114)
	call void @putch(i32 114)
	call void @putch(i32 50)
	call void @putch(i32 95)
	call void @putch(i32 49)
	call void @putch(i32 95)
	call void @putch(i32 103)
	call void @putch(i32 108)
	call void @putch(i32 111)
	call void @putch(i32 98)
	call void @putch(i32 97)
	call void @putch(i32 108)
	call void @putch(i32 91)
	call void @putch(i32 49)
	call void @putch(i32 93)
	call void @putch(i32 91)
	call void @putch(i32 49)
	call void @putch(i32 93)
	call void @putch(i32 32)
	call void @putch(i32 105)
	call void @putch(i32 115)
	call void @putch(i32 32)
	call void @putint(i32 %29)
	call void @putch(i32 10)
	%30 = load i32, i32* @A_GLOBAL
	%31 = getelementptr [5 x i32], [5 x i32]* @arr1_1_global, i32 0, i32 0
	%32 = getelementptr [3 x [2 x i32]], [3 x [2 x i32]]* @arr2_1_global, i32 0, i32 0
	%33 = call i32 @func_params(i32 %30, i32* %31, [2 x i32]* %32)
	%34 = load i32, i32* @B_GLOBAL
	%35 = getelementptr [5 x i32], [5 x i32]* @arr1_1_global, i32 0, i32 1
	%36 = load i32, i32* %35
	%37 = getelementptr [3 x [2 x i32]], [3 x [2 x i32]]* @arr2_1_global, i32 0, i32 1
	%38 = getelementptr [2 x i32], [2 x i32]* %37, i32 0, i32 1
	%39 = load i32, i32* %38
	%40 = call i32 @func2_params(i32 %34, i32 %36, i32 %39)
	store i32 %40, i32* %3
	%41 = load i32, i32* %3
	call void @putch(i32 78)
	call void @putch(i32 111)
	call void @putch(i32 119)
	call void @putch(i32 32)
	call void @putch(i32 109)
	call void @putch(i32 97)
	call void @putch(i32 105)
	call void @putch(i32 110)
	call void @putch(i32 95)
	call void @putch(i32 118)
	call void @putch(i32 97)
	call void @putch(i32 114)
	call void @putch(i32 95)
	call void @putch(i32 99)
	call void @putch(i32 32)
	call void @putch(i32 105)
	call void @putch(i32 115)
	call void @putch(i32 32)
	call void @putint(i32 %41)
	call void @putch(i32 10)
	%42 = load i32, i32* %1
	%43 = srem i32 %42, 7
	%44 = icmp ne i32 %43, 0
	br i1 %44, label %45, label %69
	
; <label>:45:
	%46 = load i32, i32* %2
	%47 = srem i32 %46, 7
	%48 = icmp ne i32 %47, 0
	br i1 %48, label %49, label %69

; <label>:49:
	br label %50
	
; <label>:50:
	%51 = load i32, i32* %1
	%52 = icmp eq i32 %51, 0
	%53 = zext i1 %52to i32
	%54 = icmp ne i32 %53, 0
	br i1 %54, label %55, label %68
	
; <label>:55:
	%56 = load i32, i32* %1
	%57 = load i32, i32* %2
	%58 = add i32 %56, %57
	store i32 %58, i32* %1
	%59 = load i32, i32* %1
	%60 = srem i32 %59, 7
	%61 = icmp eq i32 %60, 0
	br i1 %61, label %65, label %62
	
; <label>:62:
	%63 = load i32, i32* %1
	%64 = icmp sgt i32 %63, 100
	br i1 %64, label %65, label %66

; <label>:65:
	br label %67

; <label>:66:
	br label %67

; <label>:67:
	br label %50
	
; <label>:68:
	br label %69

; <label>:69:
	%70 = load i32, i32* %1
	%71 = icmp sge i32 %70, 30
	br i1 %71, label %72, label %74

; <label>:72:
	%73 = load i32, i32* %1
	call void @putch(i32 78)
	call void @putch(i32 111)
	call void @putch(i32 119)
	call void @putch(i32 32)
	call void @putch(i32 109)
	call void @putch(i32 97)
	call void @putch(i32 105)
	call void @putch(i32 110)
	call void @putch(i32 95)
	call void @putch(i32 118)
	call void @putch(i32 97)
	call void @putch(i32 114)
	call void @putch(i32 95)
	call void @putch(i32 97)
	call void @putch(i32 32)
	call void @putch(i32 105)
	call void @putch(i32 115)
	call void @putch(i32 32)
	call void @putint(i32 %73)
	call void @putch(i32 44)
	call void @putch(i32 32)
	call void @putch(i32 105)
	call void @putch(i32 116)
	call void @putch(i32 32)
	call void @putch(i32 105)
	call void @putch(i32 115)
	call void @putch(i32 32)
	call void @putch(i32 62)
	call void @putch(i32 61)
	call void @putch(i32 32)
	call void @putch(i32 51)
	call void @putch(i32 48)
	call void @putch(i32 10)
	br label %82

; <label>:74:
	%75 = load i32, i32* %1
	%76 = icmp sle i32 %75, 10
	br i1 %76, label %77, label %79

; <label>:77:
	%78 = load i32, i32* %1
	call void @putch(i32 78)
	call void @putch(i32 111)
	call void @putch(i32 119)
	call void @putch(i32 32)
	call void @putch(i32 109)
	call void @putch(i32 97)
	call void @putch(i32 105)
	call void @putch(i32 110)
	call void @putch(i32 95)
	call void @putch(i32 118)
	call void @putch(i32 97)
	call void @putch(i32 114)
	call void @putch(i32 95)
	call void @putch(i32 97)
	call void @putch(i32 32)
	call void @putch(i32 105)
	call void @putch(i32 115)
	call void @putch(i32 32)
	call void @putint(i32 %78)
	call void @putch(i32 44)
	call void @putch(i32 32)
	call void @putch(i32 105)
	call void @putch(i32 116)
	call void @putch(i32 32)
	call void @putch(i32 105)
	call void @putch(i32 115)
	call void @putch(i32 32)
	call void @putch(i32 60)
	call void @putch(i32 61)
	call void @putch(i32 32)
	call void @putch(i32 49)
	call void @putch(i32 48)
	call void @putch(i32 10)
	br label %81

; <label>:79:
	%80 = load i32, i32* %1
	call void @putch(i32 78)
	call void @putch(i32 111)
	call void @putch(i32 119)
	call void @putch(i32 32)
	call void @putch(i32 109)
	call void @putch(i32 97)
	call void @putch(i32 105)
	call void @putch(i32 110)
	call void @putch(i32 95)
	call void @putch(i32 118)
	call void @putch(i32 97)
	call void @putch(i32 114)
	call void @putch(i32 95)
	call void @putch(i32 97)
	call void @putch(i32 32)
	call void @putch(i32 105)
	call void @putch(i32 115)
	call void @putch(i32 32)
	call void @putint(i32 %80)
	call void @putch(i32 44)
	call void @putch(i32 32)
	call void @putch(i32 105)
	call void @putch(i32 116)
	call void @putch(i32 32)
	call void @putch(i32 105)
	call void @putch(i32 115)
	call void @putch(i32 32)
	call void @putch(i32 62)
	call void @putch(i32 32)
	call void @putch(i32 49)
	call void @putch(i32 48)
	call void @putch(i32 32)
	call void @putch(i32 97)
	call void @putch(i32 110)
	call void @putch(i32 100)
	call void @putch(i32 32)
	call void @putch(i32 60)
	call void @putch(i32 32)
	call void @putch(i32 51)
	call void @putch(i32 48)
	call void @putch(i32 10)
	br label %81

; <label>:81:
	br label %82

; <label>:82:
	%83 = load i32, i32* %1
	%84 = sub i32 0, %83
	store i32 %84, i32* %1
	%85 = load i32, i32* %2
	store i32 %85, i32* %2
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 116)
	call void @putch(i32 101)
	call void @putch(i32 115)
	call void @putch(i32 116)
	call void @putch(i32 102)
	call void @putch(i32 105)
	call void @putch(i32 108)
	call void @putch(i32 101)
	call void @putch(i32 49)
	call void @putch(i32 32)
	call void @putch(i32 101)
	call void @putch(i32 110)
	call void @putch(i32 100)
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 61)
	ret i32 0
}
