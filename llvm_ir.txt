declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)

@a1 = dso_local constant i32 3
@a2 = dso_local constant i32 4
@a3 = dso_local constant i32 12
@a4 = dso_local constant i32 14
@a5 = dso_local constant i32 -4
@b1 = dso_local global i32 51
@b2 = dso_local global i32 36

define dso_local void @fun1() {
	%1 = alloca i32
	store i32 1, i32* %1
	ret void
}
define dso_local void @fun2(i32 ,i32) {
	%3 = alloca i32
	%4 = load i32, i32* %0
	%5 = load i32, i32* %1
	%6 = add i32 %4, %5
	store i32 %6, i32* %3
	%7 = load i32, i32* %0
	%8 = load i32, i32* %1
	%9 = add i32 %7, %8
	store i32 %9, i32* %0
}
define dso_local i32 @fun3(i32 ,i32) {
	%3 = alloca i32
	%4 = load i32, i32* %0
	%5 = load i32, i32* %1
	%6 = sub i32 %4, %5
	store i32 %6, i32* %3
	%7 = load i32, i32* %0
	%8 = load i32, i32* %1
	%9 = add i32 %7, %8
	ret i32 %9
}
define dso_local i32 @fun4() {
	%1 = alloca i32
	%2 = load i32, i32* @a1
	store i32 %2, i32* %1
	%3 = load i32, i32* @a2
	ret i32 %3
}
define dso_local i32 @fun5(i32) {
	%2 = load i32, i32* %0
	%3 = call i32 @fun5(i32 %2)
	ret i32 %3
}

define dso_local i32 @main() {
	%1 = alloca i32
	store i32 1, i32* %1
	%2 = alloca i32 // b
	store i32 2, i32* %2
	%3 = alloca i32
	%4 = load i32, i32* %1
	%5 = load i32, i32* %2
	%6 = call i32 @fun3(i32 %4, i32 %5)
	store i32 %6, i32* %3
	%7 = alloca i32
	%8 = call i32 @fun4()
	store i32 %8, i32* %7
	%9 = alloca i32
	%10 = load i32, i32* %1
	%11 = load i32, i32* @a2
	%12 = add i32 %10, %11
	store i32 5, i32* %9
	%13 = load i32, i32* %3
	%14 = load i32, i32* %1
	%15 = call i32 @fun3(i32 %13, i32 %14)
	call void @fun2(i32 %15, i32 0)
}
